#
# Copyright (c) 2014, UChicago Argonne, LLC
# See LICENSE file.
#

site.local {
	execution {
		type: "local"
		URL: "localhost"
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 100
	initialParallelTasks: 99
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:20:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.orthrosall {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1all.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 64
			jobOptions.pe: "sec1_all"
			highOverallocation: 100
			maxJobTime: "1300:33:20"
			lowOverallocation: 100
			tasksPerNode: 64
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.orthrosregular {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1reg.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 64
			jobOptions.pe: "sec1_reg"
			highOverallocation: 100
			maxJobTime: "1300:33:20"
			lowOverallocation: 100
			tasksPerNode: 64
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.orthrosextra {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1extra.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 16
			jobOptions.pe: "sec1_extra"
			highOverallocation: 100
			maxJobTime: "1300:33:20"
			lowOverallocation: 100
			tasksPerNode: 16
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.lcrc {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobOptions.ppn: 32
			highOverallocation: 100
			maxJobTime: "30:33:20"
			lowOverallocation: 100
			tasksPerNode: 32
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:30:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.edison {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
            #jobOptions.jobType     : "single"                   # Submit jobs via aprun mechanism
			#jobOptions."constraint" : "haswell"
			tasksPerNode: 24
			maxJobTime: "15:30:00"
			jobQueue: "regular"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:30:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.cori {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
            #jobOptions.jobType     : "single"                   # Submit jobs via aprun mechanism
			jobOptions.slurm.constraint : "haswell"
			tasksPerNode: 24
			maxJobTime: "15:30:00"
			jobQueue: "regular"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:30:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.biocluster {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			tasksPerNode: 24
			jobOptions {
				"mem-per-cpu": "1G"
			}
			maxJobTime: "15:30:00"
			jobQueue: "batch"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:30:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.conte {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobQueue: "msangid"
			jobOptions.ppn: 16
			highOverallocation: 100
			maxJobTime: "15:30:00"
			lowOverallocation: 100
			tasksPerNode: 16
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:30:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

site.rice {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobQueue: "msangid"
			jobOptions.ppn: 20
			highOverallocation: 100
			maxJobTime: "15:30:00"
			lowOverallocation: 100
			tasksPerNode: 20
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins.tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:30:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "00:10:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF.tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:20:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/bin/ParseMic"
		maxWallTime: "00:20:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
}

#lazyErrors: false
#executionRetries: 0
#keepSiteDir: false
#statusMode: "provider"
#tickerPrefix: "Job status: "
#wrapperParameterMode: "args"
#mappingCheckerEnabled: false
#providerStagingPinSwiftFiles: false
#fileGCEnabled: false
#alwaysTransferWrapperLog: false
maxForeachThreads: 1000
